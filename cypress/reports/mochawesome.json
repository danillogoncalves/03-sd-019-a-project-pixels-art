{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-12-10T05:01:55.332Z",
    "end": "2021-12-10T05:03:21.261Z",
    "duration": 85929,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "5641b8ae-d8de-4275-802d-a647dbe6a50e",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d850ae78-ae06-407e-874b-a42c76235158",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 267,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "7cdb3997-ec9d-4cca-a874-90594386ce3e",
              "parentUUID": "d850ae78-ae06-407e-874b-a42c76235158",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7cdb3997-ec9d-4cca-a874-90594386ce3e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 267,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1b184fe6-d187-4851-be53-f7c7a6da6fd5",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 203,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "b9516c7e-a2de-4f8c-b9a4-290a7cde3348",
              "parentUUID": "1b184fe6-d187-4851-be53-f7c7a6da6fd5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 217,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "52eb28a8-3507-4b76-9eda-4b30304b1717",
              "parentUUID": "1b184fe6-d187-4851-be53-f7c7a6da6fd5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 277,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "ab4cf2b9-dd51-42c9-89f8-0367b389144f",
              "parentUUID": "1b184fe6-d187-4851-be53-f7c7a6da6fd5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 199,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "bb63ca02-23d8-4ed9-8ab3-cabe36881145",
              "parentUUID": "1b184fe6-d187-4851-be53-f7c7a6da6fd5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 153,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "80981705-b9ad-4127-b7b3-74d61e7441c4",
              "parentUUID": "1b184fe6-d187-4851-be53-f7c7a6da6fd5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 120,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "3d3ae9b6-e2be-44c5-8e64-59b83fdd6556",
              "parentUUID": "1b184fe6-d187-4851-be53-f7c7a6da6fd5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 113,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "6fd40516-15be-4001-a378-c1495e9eb2be",
              "parentUUID": "1b184fe6-d187-4851-be53-f7c7a6da6fd5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b9516c7e-a2de-4f8c-b9a4-290a7cde3348",
            "52eb28a8-3507-4b76-9eda-4b30304b1717",
            "ab4cf2b9-dd51-42c9-89f8-0367b389144f",
            "bb63ca02-23d8-4ed9-8ab3-cabe36881145",
            "80981705-b9ad-4127-b7b3-74d61e7441c4",
            "3d3ae9b6-e2be-44c5-8e64-59b83fdd6556",
            "6fd40516-15be-4001-a378-c1495e9eb2be"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1282,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c0f651f5-5664-4e44-aedb-1b9e214b16e1",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 144,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "6d5d98d2-d943-4b2b-982a-ab6cd92fc155",
              "parentUUID": "c0f651f5-5664-4e44-aedb-1b9e214b16e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 317,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "f6615301-2840-41f3-b2d4-f2b5d42795b5",
              "parentUUID": "c0f651f5-5664-4e44-aedb-1b9e214b16e1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6d5d98d2-d943-4b2b-982a-ab6cd92fc155",
            "f6615301-2840-41f3-b2d4-f2b5d42795b5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 461,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "65b23c73-1db4-487b-83b8-43369d7afb27",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 144,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "ceb308c5-bcca-4502-be8b-7fbba24554c8",
              "parentUUID": "65b23c73-1db4-487b-83b8-43369d7afb27",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 192,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "91ee1cee-ff01-418c-9035-241d295ec9fe",
              "parentUUID": "65b23c73-1db4-487b-83b8-43369d7afb27",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 299,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "91dc9d83-6b40-4437-bf9a-c2e9bc0763a7",
              "parentUUID": "65b23c73-1db4-487b-83b8-43369d7afb27",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 125,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "146b1e74-02cd-4d6a-ad69-f79d4d672b9c",
              "parentUUID": "65b23c73-1db4-487b-83b8-43369d7afb27",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ceb308c5-bcca-4502-be8b-7fbba24554c8",
            "91ee1cee-ff01-418c-9035-241d295ec9fe",
            "91dc9d83-6b40-4437-bf9a-c2e9bc0763a7",
            "146b1e74-02cd-4d6a-ad69-f79d4d672b9c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 760,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8c2ef4ef-4acf-43a7-b34e-c3b802c82e74",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 433,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "540810b0-9df9-4d07-af39-2ce6b1d0dccd",
              "parentUUID": "8c2ef4ef-4acf-43a7-b34e-c3b802c82e74",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 425,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "f7a8a640-8400-4850-beb2-cf3a46bd3f07",
              "parentUUID": "8c2ef4ef-4acf-43a7-b34e-c3b802c82e74",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "540810b0-9df9-4d07-af39-2ce6b1d0dccd",
            "f7a8a640-8400-4850-beb2-cf3a46bd3f07"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 858,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f6d89bcd-6395-4c11-b121-d0712e6d5997",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 103,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "9fe82ff8-b9f5-424e-b2c6-c1206716d954",
              "parentUUID": "f6d89bcd-6395-4c11-b121-d0712e6d5997",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 152,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "c029d1e3-30c4-46cb-b8f9-bf525a4ed585",
              "parentUUID": "f6d89bcd-6395-4c11-b121-d0712e6d5997",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9fe82ff8-b9f5-424e-b2c6-c1206716d954",
            "c029d1e3-30c4-46cb-b8f9-bf525a4ed585"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 255,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b38c9363-103a-4989-90ef-a20e809064d5",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 507,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "58d49b3b-4a87-4ac4-b789-d3edd3176562",
              "parentUUID": "b38c9363-103a-4989-90ef-a20e809064d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9343,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "926f74cc-9fea-4b24-8157-d7a26d1a3b0a",
              "parentUUID": "b38c9363-103a-4989-90ef-a20e809064d5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "58d49b3b-4a87-4ac4-b789-d3edd3176562",
            "926f74cc-9fea-4b24-8157-d7a26d1a3b0a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9850,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ca875370-7916-44d4-bd70-3d4bcfdf7cee",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2391,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "8e92a9c5-175a-42ce-9442-d877e79ff2db",
              "parentUUID": "ca875370-7916-44d4-bd70-3d4bcfdf7cee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9270,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "45eca54d-033c-4aa9-9db5-f4e82e8bfd24",
              "parentUUID": "ca875370-7916-44d4-bd70-3d4bcfdf7cee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 2407,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "b297eaae-faf2-49a3-8745-d2d475926550",
              "parentUUID": "ca875370-7916-44d4-bd70-3d4bcfdf7cee",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8e92a9c5-175a-42ce-9442-d877e79ff2db",
            "45eca54d-033c-4aa9-9db5-f4e82e8bfd24",
            "b297eaae-faf2-49a3-8745-d2d475926550"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14068,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5c191a31-85dd-4c6c-8be1-9e167ef246a4",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 194,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "42da47f2-f14b-493c-9958-46909889d82d",
              "parentUUID": "5c191a31-85dd-4c6c-8be1-9e167ef246a4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 157,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "de14439b-ad5e-4631-aa93-126cbecfd841",
              "parentUUID": "5c191a31-85dd-4c6c-8be1-9e167ef246a4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 102,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "6b98d115-513c-47f5-9434-6bc336d23349",
              "parentUUID": "5c191a31-85dd-4c6c-8be1-9e167ef246a4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2703,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "07434db7-ff9c-4a1c-b0d8-6828e1026bfc",
              "parentUUID": "5c191a31-85dd-4c6c-8be1-9e167ef246a4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "42da47f2-f14b-493c-9958-46909889d82d",
            "de14439b-ad5e-4631-aa93-126cbecfd841",
            "6b98d115-513c-47f5-9434-6bc336d23349",
            "07434db7-ff9c-4a1c-b0d8-6828e1026bfc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3156,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a84e9f6b-a63b-4b2c-afe2-9b42780f8de7",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4380,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35695/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35695/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35695/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35695/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35695/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35695/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35695/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35695/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35695/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35695/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35695/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35695/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35695/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "272000ee-93f7-495f-aa2d-db1038d39b76",
              "parentUUID": "a84e9f6b-a63b-4b2c-afe2-9b42780f8de7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4398,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:35695/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35695/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35695/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35695/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35695/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35695/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35695/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35695/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35695/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35695/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35695/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35695/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35695/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "669e8de5-4ca1-4321-9f88-4d72cbd3c1b6",
              "parentUUID": "a84e9f6b-a63b-4b2c-afe2-9b42780f8de7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4368,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:35695/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35695/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35695/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35695/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35695/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35695/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35695/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35695/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35695/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35695/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35695/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35695/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35695/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "29e96d80-d3c1-45ef-a9f4-6d3f7092c745",
              "parentUUID": "a84e9f6b-a63b-4b2c-afe2-9b42780f8de7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4404,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:35695/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35695/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35695/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35695/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35695/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35695/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35695/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35695/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35695/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35695/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35695/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35695/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35695/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b761d006-981f-4fae-8738-f525c305ce66",
              "parentUUID": "a84e9f6b-a63b-4b2c-afe2-9b42780f8de7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4395,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35695/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35695/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35695/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35695/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35695/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35695/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35695/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35695/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35695/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35695/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35695/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35695/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35695/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c71469df-5301-478b-aafe-d89109052824",
              "parentUUID": "a84e9f6b-a63b-4b2c-afe2-9b42780f8de7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4378,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35695/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35695/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35695/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35695/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35695/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35695/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35695/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35695/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35695/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35695/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35695/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35695/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35695/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "50ed5c9a-e257-4c32-82ab-ef71c9a08fc0",
              "parentUUID": "a84e9f6b-a63b-4b2c-afe2-9b42780f8de7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4374,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:35695/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35695/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35695/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35695/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35695/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35695/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35695/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35695/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35695/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35695/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35695/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35695/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35695/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "77d92e4c-8397-4b32-aa12-fe29933e7e01",
              "parentUUID": "a84e9f6b-a63b-4b2c-afe2-9b42780f8de7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4388,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35695/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35695/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35695/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35695/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35695/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35695/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35695/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35695/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35695/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35695/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35695/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35695/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35695/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "49d541b1-b3df-4154-a19c-4a73f70af9de",
              "parentUUID": "a84e9f6b-a63b-4b2c-afe2-9b42780f8de7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4416,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35695/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35695/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35695/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35695/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35695/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35695/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35695/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35695/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35695/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35695/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35695/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35695/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35695/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "20f7200f-25ae-4dc3-9a23-80ab1a08dcf4",
              "parentUUID": "a84e9f6b-a63b-4b2c-afe2-9b42780f8de7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "272000ee-93f7-495f-aa2d-db1038d39b76",
            "669e8de5-4ca1-4321-9f88-4d72cbd3c1b6",
            "29e96d80-d3c1-45ef-a9f4-6d3f7092c745",
            "b761d006-981f-4fae-8738-f525c305ce66",
            "c71469df-5301-478b-aafe-d89109052824",
            "50ed5c9a-e257-4c32-82ab-ef71c9a08fc0",
            "77d92e4c-8397-4b32-aa12-fe29933e7e01",
            "49d541b1-b3df-4154-a19c-4a73f70af9de",
            "20f7200f-25ae-4dc3-9a23-80ab1a08dcf4"
          ],
          "pending": [],
          "skipped": [],
          "duration": 39501,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bdf63bc0-98aa-4117-bc3e-07ce04562af9",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4375,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35695/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35695/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35695/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35695/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35695/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35695/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35695/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35695/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35695/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35695/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35695/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35695/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35695/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "772cb367-0e21-45b7-94eb-7f2e6e16d115",
              "parentUUID": "bdf63bc0-98aa-4117-bc3e-07ce04562af9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4420,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35695/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35695/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35695/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35695/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35695/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35695/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35695/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35695/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35695/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35695/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35695/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35695/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35695/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f8c02687-23de-4a71-abe9-cefe77d6557d",
              "parentUUID": "bdf63bc0-98aa-4117-bc3e-07ce04562af9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4397,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35695/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35695/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35695/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35695/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35695/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35695/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35695/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35695/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35695/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35695/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35695/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35695/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35695/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "09a3036d-fdda-4b26-be42-11efc513f422",
              "parentUUID": "bdf63bc0-98aa-4117-bc3e-07ce04562af9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "772cb367-0e21-45b7-94eb-7f2e6e16d115",
            "f8c02687-23de-4a71-abe9-cefe77d6557d",
            "09a3036d-fdda-4b26-be42-11efc513f422"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13192,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "526a8c82-6763-4d71-ae91-5bb66ceb8465",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 510,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:35695/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:35695/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:35695/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:35695/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:35695/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:35695/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:35695/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:35695/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35695/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35695/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:35695/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35695/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35695/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35695/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "41218bee-021c-48ef-9aae-098260766126",
              "parentUUID": "526a8c82-6763-4d71-ae91-5bb66ceb8465",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 485,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:35695/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:35695/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:35695/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:35695/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:35695/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:35695/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:35695/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:35695/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35695/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35695/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:35695/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35695/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35695/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35695/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "53a7ff84-e96a-41de-a363-519af21c2189",
              "parentUUID": "526a8c82-6763-4d71-ae91-5bb66ceb8465",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "41218bee-021c-48ef-9aae-098260766126",
            "53a7ff84-e96a-41de-a363-519af21c2189"
          ],
          "pending": [],
          "skipped": [],
          "duration": 995,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}